# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0


AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS GenAI IDP Accelerator - resources for IDP Pattern 2

Parameters:

  StackName:
    Type: String

  InputBucket:
    Type: String

  ConfigurationBucket:
    Type: String

  OutputBucket:
    Type: String

  WorkingBucket:
    Type: String

  TrackingTable:
    Type: String

  CustomerManagedEncryptionKeyArn:
    Type: String

  LogRetentionDays:
    Type: Number
  
  LogLevel:
    Type: String
    Default: WARN
    AllowedValues:
      - DEBUG
      - INFO
      - WARN
      - ERROR
      - CRITICAL
    Description: Default logging level for all Lambda functions
    
  AppSyncApiUrl:
    Type: String
    Default: ""
    Description: The AppSync API URL for status updates
    
  AppSyncApiArn:
    Type: String
    Default: ""
    Description: The AppSync API ARN for IAM permissions
  
  ExecutionTimeThresholdMs:
    Type: Number
    Default: 30000


  CustomClassificationModelARN:
    Type: String
    Default: ''

  CustomExtractionModelARN:
    Type: String
    Default: ''

  UpdateConfigurationFunctionArn:
    Type: String

  ConfigurationTable:
    Type: String
    
    
  BedrockGuardrailId:
    Type: String
    Default: ""
    Description: "Optionally provide the Id (not name) of an existing Bedrock Guardrail to be used for Bedrock interactions"
    
  BedrockGuardrailVersion:
    Type: String
    Default: ""
    Description: "If you provided a Bedrock Guardrail Id above, provide the corresponding Guardrail version here"

  EnableHITL:
    Type: String
    Default: "false"
    AllowedValues:
      - "true"
      - "false"
    Description: "Enable Human In The Loop (A2I) for document review"

  SageMakerA2IReviewPortalURL:
    Type: String
    Default: ""
    Description: "SageMaker A2I Review Portal URL for HITL workflows"

  ConfigurationDefaultS3Uri:
    Type: String
    Description: "S3 URI (s3://bucket/path/config.json) to import default configuration from S3"

  ConfigLibraryHash:
    Type: String
    Description: "Hash token from config library to force updates when config library changes"

  PermissionsBoundaryArn:
    Type: String
    Default: ""
    Description: >-
      (Optional) ARN of an existing IAM Permissions Boundary policy to attach to all IAM roles.
      Required by some organizations with Service Control Policies (SCPs).
      Format: arn:${AWS::Partition}:iam::account-id:policy/policy-name
      Leave blank if no Permissions Boundary is required.
    AllowedPattern: "^(|arn:aws[a-z-]*:iam::[0-9]{12}:policy/.+)$"
    ConstraintDescription: Must be empty or a valid IAM policy ARN

Conditions:
  HasGuardrailConfig: !And [!Not [!Equals [!Ref BedrockGuardrailId, ""]], !Not [!Equals [!Ref BedrockGuardrailVersion, ""]]]
  HasCustomClassificationModelARN: !Not [!Equals [!Ref CustomClassificationModelARN, ""]]
  HasCustomExtractionModelARN: !Not [!Equals [!Ref CustomExtractionModelARN, ""]]
  HasPermissionsBoundary: !Not [!Equals [!Ref PermissionsBoundaryArn, ""]]
  HasAppSyncApi: !Not [!Equals [!Ref AppSyncApiArn, ""]]


Resources:

  # JSON Schema which defines the structure of the pattern configuration settings
  # used by the UI to allow the configuration to be inspected and customized.
  UpdateSchemaConfig:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !Ref UpdateConfigurationFunctionArn
      Schema: 
        type: object
        required:
          - notes
          - classes
          - classification
          - extraction
        properties:
          notes:
            order: 0
            type: string
            description: Notes
          ocr:
            order: 1
            type: object
            sectionLabel: OCR Configuration
            required:
              - features
            properties:
              image:
                type: object
                sectionLabel: Image Processing Settings
                description: Configure image resolution and processing options for OCR
                order: 0
                properties:
                  dpi:
                    type: number
                    description: "DPI (dots per inch) for extracting images from PDF pages. Higher values produce better quality but larger images. Default: 150"
                    minimum: 72
                    maximum: 300
                    default: 150
                    order: 0
                  target_width:
                    type: number
                    description: "Target image width in pixels. Images larger than this will be resized. If not specified, automatic default of 951 pixels is applied to optimize resource usage and token consumption."
                    minimum: 100
                    maximum: 3500
                    order: 1
                  target_height:
                    type: number
                    description: "Target image height in pixels. Images larger than this will be resized. If not specified, automatic default of 1268 pixels is applied to optimize resource usage and token consumption."
                    minimum: 100
                    maximum: 3500
                    order: 2
                  preprocessing:
                    type: boolean
                    description: "Apply adaptive binarization preprocessing to improve OCR accuracy on documents with uneven lighting or low contrast. Warning: May slightly increase processing time."
                    default: false
                    order: 3
              backend:
                type: string
                description: "OCR backend to use: 'textract' for AWS Textract, 'bedrock' for LLM-based OCR, 'none' for image-only processing without OCR"
                enum: ["textract", "bedrock", "none"]
                default: "textract"
                order: 3
              model_id:
                type: string
                description: "Bedrock model ID (only used if backend is 'bedrock')"
                enum: 
                  - "us.amazon.nova-lite-v1:0"
                  - "us.amazon.nova-pro-v1:0"
                  - "us.amazon.nova-premier-v1:0"
                  - "us.anthropic.claude-3-haiku-20240307-v1:0"
                  - "us.anthropic.claude-3-5-sonnet-20241022-v2:0"
                  - "us.anthropic.claude-3-7-sonnet-20250219-v1:0"
                  - "us.anthropic.claude-sonnet-4-20250514-v1:0"
                  - "us.anthropic.claude-sonnet-4-20250514-v1:0:1m"
                  - "us.anthropic.claude-opus-4-20250514-v1:0"
                  - "us.anthropic.claude-opus-4-1-20250805-v1:0"
                order: 2
                dependsOn: {
                  field: "backend",
                  value: "bedrock"
                }
              system_prompt:
                type: string
                description: "System prompt for Bedrock OCR (only used if backend is 'bedrock')"
                default: "You are an expert OCR system. Extract all text from the provided image accurately, preserving layout where possible."
                order: 3
                dependsOn: {
                  field: "backend",
                  value: "bedrock"
                }
              task_prompt:
                type: string
                description: "Task prompt for Bedrock OCR (only used if backend is 'bedrock')"
                default: "Extract all text from this document image. Preserve the layout, including paragraphs, tables, and formatting."
                order: 4
                dependsOn: {
                  field: "backend",
                  value: "bedrock"
                }
              features:
                  type: array
                  listLabel: "Textract Features"
                  itemLabel: "Feature"
                  description: "Textract features (only used if backend is 'textract')"
                  order: 5
                  dependsOn: {
                    field: "backend",
                    values: ["textract"]
                  }
                  items:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        description: "Feature - select one of the supported OCR feature types"
                        enum: ["TABLES", "FORMS", "SIGNATURES", "LAYOUT"]
          classes:
            order: 2
            type: array
            sectionLabel: Class definitions
            listLabel: Classes
            itemLabel: Class
            columns: 2
            items:
              type: object
              required:
                - name
                - description
                - attributes
              properties:
                name:
                  type: string
                  description: Class name
                description:
                  type: string
                  description: Class description. Instruct LLM how to identify the class from the context provided in the classification prompt.
                document_name_regex:
                  type: string
                  description: "Optional regex pattern to match against document ID/name. When matched, all pages will be classified as this class type without LLM processing. Use only when all pages should be the same class."
                  order: 2.5
                document_page_content_regex:
                  type: string
                  description: "Optional regex pattern to match against page content text. When matched during multi-modal page-level classification, the page will be classified as this class type without LLM processing."
                  order: 2.6
                examples:
                  type: array
                  description: Class few-shot examples
                  listLabel: Few-shot examples
                  itemLabel: Few-shot example
                  items:
                    type: object
                    required:
                      - name
                      - classPrompt
                      - attributesPrompt
                      - imagesPath
                    properties:
                      name:
                        type: string
                        description: Example name
                        order: 0
                      classPrompt:
                        type: string
                        description: Classification prompt as few-shot classification example for this class
                        order: 2
                      attributesPrompt:
                        type: string
                        description: Extraction prompt as few-shot attribute value extraction example for this class.
                        order: 3
                      imagePath:
                        type: string
                        description: Image(s) Path in the Configuration Bucket. Supports single files, or S3 prefixes for folders with multiple images. Optional but recommended for better visual understanding.
                        order: 4
                attributes:
                  type: array
                  listLabel: Attributes
                  itemLabel: Attribute
                  items:
                    type: object
                    required:
                      - name
                      - description
                      - attributeType
                    properties:
                      name:
                        type: string
                        description: Attribute name
                        order: 0
                      description:
                        type: string
                        description: Attribute description. Instruct the LLM how to identify the attribute from the context provided in the extraction prompt. Include synonyms and positional infomation where it might help the LLM to resolve ambiquities.
                        order: 1
                      attributeType:
                        type: string
                        description: Type of attribute
                        enum: ["simple", "group", "list"]
                        order: 2
                      # Simple attribute properties (existing fields)
                      evaluation_method:
                        type: string
                        description: Evaluation Method
                        enum: ["", "LLM", "SEMANTIC", "FUZZY", "NUMERIC_EXACT", "EXACT"]
                        order: 3
                        dependsOn: {
                          field: "attributeType",
                          value: "simple"
                        }
                      evaluation_threshold:
                        type: number
                        description: Evaluation Threshold - used for SEMANTIC, and FUZZY methods
                        minimum: 0
                        maximum: 1
                        order: 5
                        dependsOn: {
                          field: "evaluation_method",
                          values: ["SEMANTIC", "FUZZY"]
                        }
                      confidence_threshold:
                        type: number
                        description: Confidence threshold for this specific attribute (0.0 to 1.0). If not set, the default confidence threshold from assessment section will be used.
                        minimum: 0
                        maximum: 1
                        order: 6
                        dependsOn: {
                          field: "attributeType",
                          value: "simple"
                        }
                      # Group-specific properties
                      groupAttributes:
                        type: array
                        listLabel: Group Attributes
                        itemLabel: Attribute
                        order: 7
                        dependsOn: {
                          field: "attributeType",
                          value: "group"
                        }
                        items:
                          type: object
                          required:
                            - name
                            - description
                          properties:
                            name:
                              type: string
                              description: Attribute name
                              order: 0
                            description:
                              type: string
                              description: Attribute description. Instruct the LLM how to identify the attribute from the context provided in the extraction prompt. Include synonyms and positional infomation where it might help the LLM to resolve ambiquities.
                              order: 1
                            evaluation_method:
                              type: string
                              description: Evaluation Method
                              enum: ["", "LLM", "SEMANTIC", "FUZZY", "NUMERIC_EXACT", "EXACT"]
                              order: 2
                            evaluation_threshold:
                              type: number
                              description: Evaluation Threshold - used for SEMANTIC, and FUZZY methods
                              minimum: 0
                              maximum: 1
                              order: 4
                              dependsOn: {
                                field: "evaluation_method",
                                values: ["SEMANTIC", "FUZZY"]
                              }
                            confidence_threshold:
                              type: number
                              description: Confidence threshold for this specific attribute (0.0 to 1.0). If not set, the default confidence threshold from assessment section will be used.
                              minimum: 0
                              maximum: 1
                              order: 5
                          columns: 2
                      # List-specific properties
                      listItemTemplate:
                        type: object
                        sectionLabel: List Item Template
                        order: 8
                        dependsOn: {
                          field: "attributeType",
                          value: "list"
                        }
                        required:
                          - itemAttributes
                        properties:
                          itemDescription:
                            type: string
                            description: Description of each list item. Instruct the LLM how to identify the list item (e.g. a transaction in a bank statement). 
                            order: 0
                          itemAttributes:
                            type: array
                            listLabel: Item Attributes
                            itemLabel: Attribute
                            order: 1
                            items:
                              type: object
                              required:
                                - name
                                - description
                              properties:
                                name:
                                  type: string
                                  description: Attribute name
                                  order: 0
                                description:
                                  type: string
                                  description: Attribute description. Instruct the LLM how to identify the attribute from the context provided in the extraction prompt. Include synonyms and positional infomation where it might help the LLM to resolve ambiquities.
                                  order: 1
                                evaluation_method:
                                  type: string
                                  description: Evaluation Method
                                  enum: ["", "LLM", "SEMANTIC", "FUZZY", "NUMERIC_EXACT", "EXACT"]
                                  order: 2
                                evaluation_threshold:
                                  type: number
                                  description: Evaluation Threshold - used for SEMANTIC, and FUZZY methods
                                  minimum: 0
                                  maximum: 1
                                  order: 4
                                  dependsOn: {
                                    field: "evaluation_method",
                                    values: ["SEMANTIC", "FUZZY"]
                                  }
                                confidence_threshold:
                                  type: number
                                  description: Confidence threshold for this specific attribute (0.0 to 1.0). If not set, the default confidence threshold from assessment section will be used.
                                  minimum: 0
                                  maximum: 1
                                  order: 5
                              columns: 2
                    # This controls the layout of the form fields inside each attribute item
                    columns: 2
          classification:
            order: 3
            type: object
            sectionLabel: Classification Inference
            required:
              - model
              - temperature
              - top_k
              - top_p
              - max_tokens
              - system_prompt
              - task_prompt
            properties:
              image:
                type: object
                sectionLabel: Image Processing Settings
                description: Configure image resolution and processing options for image attachments in classification
                order: 0
                properties:
                  target_width:
                    type: number
                    description: "Target image width in pixels. Images larger than this will be resized. Default: 951"
                    minimum: 100
                    maximum: 3500
                    order: 0
                  target_height:
                    type: number
                    description: "Target image height in pixels. Images larger than this will be resized. Default: 1268"
                    minimum: 100
                    maximum: 3500
                    order: 1
              model:
                type: string
                description: Model identifier
                enum: 
                  - !If 
                    - HasCustomClassificationModelARN 
                    - !Ref CustomClassificationModelARN
                    - !Ref AWS::NoValue
                  - "us.amazon.nova-lite-v1:0"
                  - "us.amazon.nova-pro-v1:0"
                  - "us.amazon.nova-premier-v1:0"
                  - "us.anthropic.claude-3-haiku-20240307-v1:0"
                  - "us.anthropic.claude-3-5-sonnet-20241022-v2:0"
                  - "us.anthropic.claude-3-7-sonnet-20250219-v1:0"
                  - "us.anthropic.claude-sonnet-4-20250514-v1:0"
                  - "us.anthropic.claude-sonnet-4-20250514-v1:0:1m"
                  - "us.anthropic.claude-opus-4-20250514-v1:0"
                  - "us.anthropic.claude-opus-4-1-20250805-v1:0"
                order: 1
              classificationMethod:
                type: string
                description: "Classification methodology to use"
                enum: ["multimodalPageLevelClassification", "textbasedHolisticClassification"]
                order: 2
              temperature:
                type: number
                minimum: 0
                maximum: 1
                description: Sampling temperature
                order: 3
              top_k:
                type: integer
                minimum: 1
                description: Sampling Top K
                order: 4
              top_p:
                type: number
                description: Sampling Top P
                order: 5
              max_tokens:
                type: number
                description: Max tokens
                order: 6
              system_prompt:
                type: string
                description: System prompt
                order: 7
              task_prompt:
                type: string
                description: Task prompt - include placeholders {CLASS_NAMES_AND_DESCRIPTIONS} (replaced with the class names and descriptions for all specified classes), {FEW_SHOT_EXAMPLES} (replaced by classPrompt and image data from examples in class definitions), {DOCUMENT_TEXT} (replaced by the OCR output), and for multi-modal classification {DOCUMENT_IMAGE} (replaced by the page image attachment). Optionally use <<CACHEPOINT>> to separate static and dynamic elements of prompt for Bedrock prompt caching.
                order: 8
          extraction:
            order: 4
            type: object
            format: section
            sectionLabel: Extraction Inference
            required:
              - model
              - temperature
              - top_k
              - top_p
              - max_tokens
              - system_prompt
              - task_prompt
            properties:
              image:
                type: object
                sectionLabel: Image Processing Settings
                description: Configure image resolution and processing options for for image attachments in extraction
                order: 0
                properties:
                  target_width:
                    type: number
                    description: "Target image width in pixels. Images larger than this will be resized. Default: 951"
                    minimum: 100
                    maximum: 3500
                    order: 0
                  target_height:
                    type: number
                    description: "Target image height in pixels. Images larger than this will be resized. Default: 1268"
                    minimum: 100
                    maximum: 3500
                    order: 1
              model:
                type: string
                description: Model identifier
                enum: 
                  - !If 
                    - HasCustomExtractionModelARN
                    - !Ref CustomExtractionModelARN
                    - !Ref AWS::NoValue
                  - "us.amazon.nova-lite-v1:0"
                  - "us.amazon.nova-pro-v1:0"
                  - "us.amazon.nova-premier-v1:0"
                  - "us.anthropic.claude-3-haiku-20240307-v1:0"
                  - "us.anthropic.claude-3-5-sonnet-20241022-v2:0"
                  - "us.anthropic.claude-3-7-sonnet-20250219-v1:0"
                  - "us.anthropic.claude-sonnet-4-20250514-v1:0"
                  - "us.anthropic.claude-sonnet-4-20250514-v1:0:1m"
                  - "us.anthropic.claude-opus-4-20250514-v1:0"
                  - "us.anthropic.claude-opus-4-1-20250805-v1:0"
                order: 1
              temperature:
                type: number
                minimum: 0
                maximum: 1
                description: Sampling temperature
                order: 2
              top_k:
                type: integer
                minimum: 1
                description: Sampling Top K
                order: 3
              top_p:
                type: number
                description: Sampling Top P
                order: 4
              max_tokens:
                type: number
                description: Max tokens
                order: 5
              system_prompt:
                type: string
                description: System prompt
                order: 6
              task_prompt:
                type: string
                description: Task prompt - supports placeholders {DOCUMENT_CLASS} (replaced with the detected class label), {ATTRIBUTE_NAMES_AND_DESCRIPTIONS} (replaced with the attribute names and descriptions for the detected class), {FEW_SHOT_EXAMPLES} (replaced by classPrompt and image data from examples in class definitions), {DOCUMENT_TEXT} (replaced by the OCR output), and {DOCUMENT_IMAGE} (replaced by the page image attachments for each page). Optionally use <<CACHEPOINT>> to separate static and dynamic elements of prompt for Bedrock prompt caching.
                order: 7
              custom_prompt_lambda_arn:
                type: string
                description: "(Optional) ARN of a Lambda function to generate custom extraction prompts. Function name must start with 'GENAIIDP-'. If not provided, default prompts will be used. The Lambda function receives the complete config, prompt placeholders, default task prompt content, and serialized document, and returns custom system_prompt and task_prompt_content. Example: arn:${AWS::Partition}:lambda:us-east-1:123456789012:function:GENAIIDP-my-extractor"
                order: 8
          assessment:
            order: 5
            type: object
            sectionLabel: Assessment Inference
            properties:
              enabled:
                type: boolean
                description: Enable or disable assessment processing
                default: true
                order: 0
              image:
                type: object
                sectionLabel: Image Processing Settings
                description: Configure image resolution and processing options for for image attachments in assessment
                order: 1
                properties:
                  target_width:
                    type: number
                    description: "Target image width in pixels. Images larger than this will be resized. Default: 951"
                    minimum: 100
                    maximum: 3500
                    order: 0
                  target_height:
                    type: number
                    description: "Target image height in pixels. Images larger than this will be resized. Default: 1268"
                    minimum: 100
                    maximum: 3500
                    order: 1
              granular:
                type: object
                sectionLabel: Granular Assessment Configuration
                description: Configure granular assessment for improved accuracy and scalability with large documents
                order: 1
                properties:
                  enabled:
                    type: boolean
                    description: Enable granular assessment approach. When enabled, assessments are broken down into smaller, focused tasks for better accuracy and performance.
                    default: true
                    order: 0
                  max_workers:
                    type: integer
                    description: Maximum number of parallel workers for concurrent assessment tasks. Higher values increase throughput but consume more resources.
                    minimum: 1
                    maximum: 20
                    default: 4
                    order: 1
                    dependsOn: {
                      field: "enabled",
                      value: true
                    }
                  simple_batch_size:
                    type: integer
                    description: Number of simple attributes to group together in each assessment task. Smaller batches provide more focused assessments.
                    minimum: 1
                    maximum: 10
                    default: 3
                    order: 2
                    dependsOn: {
                      field: "enabled",
                      value: true
                    }
                  list_batch_size:
                    type: integer
                    description: Number of list items to process in each assessment task. Usually 1 for best accuracy, can be increased for speed.
                    minimum: 1
                    maximum: 5
                    default: 1
                    order: 3
                    dependsOn: {
                      field: "enabled",
                      value: true
                    }
              default_confidence_threshold:
                type: number
                description: Default confidence threshold for all attributes (0.0 to 1.0). If an attribute doesn't have its own threshold, this default will be used for confidence threshold alerts.
                minimum: 0
                maximum: 1
                order: 2
              model:
                type: string
                description: Bedrock model ID
                enum: ["us.amazon.nova-lite-v1:0", "us.amazon.nova-pro-v1:0", "us.amazon.nova-premier-v1:0", "us.anthropic.claude-3-haiku-20240307-v1:0", "us.anthropic.claude-3-5-sonnet-20241022-v2:0", "us.anthropic.claude-3-7-sonnet-20250219-v1:0", "us.anthropic.claude-sonnet-4-20250514-v1:0", "us.anthropic.claude-sonnet-4-20250514-v1:0:1m", "us.anthropic.claude-opus-4-20250514-v1:0", "us.anthropic.claude-opus-4-1-20250805-v1:0"]
                order: 3
              temperature:
                type: number
                description: Sampling temperature
                order: 4
              top_k:
                type: number
                description: Sampling Top K
                order: 5
              top_p:
                type: number
                description: Sampling Top P
                order: 6
              max_tokens:
                type: number
                description: Max tokens
                order: 7
              system_prompt:
                type: string
                format: textarea
                description: System prompt
                order: 8
              task_prompt:
                type: string
                format: textarea
                description: Task prompt - supports placeholders {DOCUMENT_TEXT} (markdown text), {OCR_TEXT_CONFIDENCE} (OCR text blocks with confidence), {DOCUMENT_CLASS}, {ATTRIBUTE_NAMES_AND_DESCRIPTIONS}, {EXTRACTION_RESULTS}, {GRANULAR_CONTEXT} and {DOCUMENT_IMAGE}. Use <<CACHEPOINT>> to separate static and dynamic elements of prompt for Bedrock prompt caching.
                order: 9
          summarization:
            order: 6
            type: object
            sectionLabel: Summarization Inference
            properties:
              enabled:
                type: boolean
                description: Enable or disable document summarization
                default: true
                order: 0
              model:
                type: string
                description: Bedrock model ID
                enum: ["us.amazon.nova-lite-v1:0", "us.amazon.nova-pro-v1:0", "us.amazon.nova-premier-v1:0", "us.anthropic.claude-3-haiku-20240307-v1:0", "us.anthropic.claude-3-5-sonnet-20241022-v2:0", "us.anthropic.claude-3-7-sonnet-20250219-v1:0", "us.anthropic.claude-sonnet-4-20250514-v1:0", "us.anthropic.claude-sonnet-4-20250514-v1:0:1m", "us.anthropic.claude-opus-4-20250514-v1:0", "us.anthropic.claude-opus-4-1-20250805-v1:0"]
                order: 1
              temperature:
                type: number
                description: Sampling temperature
                order: 2
              top_k:
                type: number
                description: Sampling Top K
                order: 3
              top_p:
                type: number
                description: Sampling Top P
                order: 4
              max_tokens:
                type: number
                description: Max tokens
                order: 5
              system_prompt:
                type: string
                format: textarea
                description: System prompt
                order: 6
              task_prompt:
                type: string
                format: textarea
                description: Task prompt - supports parameter {DOCUMENT_TEXT}. Optionally use <<CACHEPOINT>> to separate static and dynamic elements of prompt for Bedrock prompt caching.
                order: 7
          evaluation:
            order: 7
            type: object
            sectionLabel: Evaluation Inference
            properties:
              llm_method:
                type: object
                properties:
                  model:
                    type: string
                    description: Bedrock model ID
                    enum: ["us.amazon.nova-lite-v1:0", "us.amazon.nova-pro-v1:0", "us.amazon.nova-premier-v1:0", "us.anthropic.claude-3-haiku-20240307-v1:0", "us.anthropic.claude-3-5-sonnet-20241022-v2:0", "us.anthropic.claude-3-7-sonnet-20250219-v1:0", "us.anthropic.claude-sonnet-4-20250514-v1:0", "us.anthropic.claude-sonnet-4-20250514-v1:0:1m", "us.anthropic.claude-opus-4-20250514-v1:0", "us.anthropic.claude-opus-4-1-20250805-v1:0"]
                    order: 1
                  temperature:
                    type: number
                    description: Sampling temperature
                    default: 0.0
                    order: 2
                  top_k:
                    type: number
                    description: Sampling Top K
                    default: 250
                    order: 3
                  top_p:
                    type: number
                    description: Sampling Top P
                    order: 4
                  max_tokens:
                    type: number
                    description: Max tokens
                    order: 5
                  system_prompt:
                    type: string
                    format: textarea
                    description: System prompt for LLM evaluation
                    order: 6
                  task_prompt:
                    type: string
                    format: textarea
                    description: Task prompt for LLM evaluation - supports placeholders {DOCUMENT_CLASS}, {ATTRIBUTE_NAME}, {ATTRIBUTE_DESCRIPTION}, {EXPECTED_VALUE} and {ACTUAL_VALUE}
                    order: 7
          discovery:
            order: 8
            type: object
            sectionLabel: Discovery Configuration
            description: Configuration for document class discovery functionality
            properties:
              without_ground_truth:
                order: 0
                type: object
                sectionLabel: Discovery Without Ground Truth
                description: Configuration for discovering document classes without reference data
                properties:
                  model_id:
                    type: string
                    description: Bedrock model ID for discovery without ground truth
                    enum: ["us.amazon.nova-lite-v1:0", "us.amazon.nova-pro-v1:0", "us.amazon.nova-premier-v1:0", "us.anthropic.claude-3-haiku-20240307-v1:0", "us.anthropic.claude-3-5-sonnet-20241022-v2:0", "us.anthropic.claude-3-7-sonnet-20250219-v1:0", "us.anthropic.claude-sonnet-4-20250514-v1:0", "us.anthropic.claude-sonnet-4-20250514-v1:0:1m", "us.anthropic.claude-opus-4-20250514-v1:0", "us.anthropic.claude-opus-4-1-20250805-v1:0"]
                    default: "us.amazon.nova-pro-v1:0"
                    order: 0
                  temperature:
                    type: number
                    description: Temperature parameter for model creativity (0.0-1.0)
                    minimum: 0.0
                    maximum: 1.0
                    default: 1.0
                    order: 1
                  top_p:
                    type: number
                    description: Top-p parameter for nucleus sampling (0.0-1.0)
                    minimum: 0.0
                    maximum: 1.0
                    default: 0.1
                    order: 2
                  max_tokens:
                    type: number
                    description: Maximum number of tokens to generate
                    minimum: 1000
                    maximum: 20000
                    default: 10000
                    order: 3
                  system_prompt:
                    type: string
                    format: textarea
                    description: System prompt for the discovery model
                    default: "You are an expert in processing forms. Extracting data from images and documents. Analyze forms line by line to identify field names, data types, and organizational structure. Focus on creating comprehensive blueprints for document processing without extracting actual values."
                    order: 4
                  user_prompt:
                    type: string
                    format: textarea
                    description: User prompt template for discovery without ground truth
                    default: "This image contains forms data. Analyze the form line by line. Image may contains multiple pages, process all the pages. Form may contain multiple name value pair in one line. Extract all the names in the form including the name value pair which doesn't have value. Organize them into groups, extract field_name, data_type and field description. Field_name should be less than 60 characters, should not have space use '-' instead of space. field_description is a brief description of the field and the location of the field like box number or line number in the form and section of the form. Field_name should be unique within the group. Add two fields document_class and document_description. For document_class generate a short name based on the document content like W4, I-9, Paystub. For document_description generate a description about the document in less than 50 words. Group the fields based on the section they are grouped in the form. Group should have attributeType as \"group\". If the group repeats, add an additional field groupType and set the value as \"Table\". Do not extract the values. Return the extracted data in JSON format."
                    order: 5
              with_ground_truth:
                order: 1
                type: object
                sectionLabel: Discovery With Ground Truth
                description: Configuration for discovering document classes using reference data
                properties:
                  model_id:
                    type: string
                    description: Bedrock model ID for discovery with ground truth
                    enum: ["us.amazon.nova-lite-v1:0", "us.amazon.nova-pro-v1:0", "us.amazon.nova-premier-v1:0", "us.anthropic.claude-3-haiku-20240307-v1:0", "us.anthropic.claude-3-5-sonnet-20241022-v2:0", "us.anthropic.claude-3-7-sonnet-20250219-v1:0", "us.anthropic.claude-sonnet-4-20250514-v1:0", "us.anthropic.claude-sonnet-4-20250514-v1:0:1m", "us.anthropic.claude-opus-4-20250514-v1:0", "us.anthropic.claude-opus-4-1-20250805-v1:0"]
                    default: "us.amazon.nova-pro-v1:0"
                    order: 0
                  temperature:
                    type: number
                    description: Temperature parameter for model creativity (0.0-1.0)
                    minimum: 0.0
                    maximum: 1.0
                    default: 1.0
                    order: 1
                  top_p:
                    type: number
                    description: Top-p parameter for nucleus sampling (0.0-1.0)
                    minimum: 0.0
                    maximum: 1.0
                    default: 0.1
                    order: 2
                  max_tokens:
                    type: number
                    description: Maximum number of tokens to generate
                    minimum: 1000
                    maximum: 20000
                    default: 10000
                    order: 3
                  system_prompt:
                    type: string
                    format: textarea
                    description: System prompt for the discovery model with ground truth
                    default: "You are an expert in processing forms. Extracting data from images and documents. Use provided ground truth data as reference to optimize field extraction and ensure consistency with expected document structure and field definitions."
                    order: 4
                  user_prompt:
                    type: string
                    format: textarea
                    description: User prompt template for discovery with ground truth (use {ground_truth_json} placeholder)
                    default: "This image contains unstructured data. Analyze the data line by line using the provided ground truth as reference. <GROUND_TRUTH_REFERENCE>{ground_truth_json}</GROUND_TRUTH_REFERENCE> Ground truth reference JSON has the fields we are interested in extracting from the document/image. Use the ground truth to optimize field extraction. Match field names, data types, and groupings from the reference. Image may contain multiple pages, process all pages. Extract all field names including those without values. Do not change the group name and field name from ground truth in the extracted data json. Add field_description field for every field which will contain instruction to LLM to extract the field data from the image/document. Add data_type field for every field. Add two fields document_class and document_description. For document_class generate a short name based on the document content like W4, I-9, Paystub. For document_description generate a description about the document in less than 50 words. If the group repeats and follows table format, add a special field group_type with value \"Table\" and description field for the group. Do not extract the values."
                    order: 5
              output_format:
                order: 2
                type: object
                sectionLabel: Output Format Configuration
                description: Configuration for discovery output format
                properties:
                  sample_json:
                    type: string
                    format: textarea
                    description: Sample JSON format for discovery output
                    default: "{\n  \"document_class\": \"Form-1040\",\n  \"document_description\": \"Brief summary of the document\",\n  \"groups\": [\n    {\n      \"name\": \"PersonalInformation\",\n      \"description\": \"Personal information of Tax payer\",\n      \"attributeType\": \"group\",\n      \"groupType\": \"normal\",\n      \"groupAttributes\": [\n        {\n          \"name\": \"FirstName\",\n          \"dataType\": \"string\",\n          \"description\": \"First Name of Taxpayer\"\n        },\n        {\n          \"name\": \"Age\",\n          \"dataType\": \"number\",\n          \"description\": \"Age of Taxpayer\"\n        }\n      ]\n    }\n  ]\n}"
                    order: 0
          s3Vectors:
            order: 8
            type: object
            sectionLabel: S3 Vectors
            properties:
              filterableMetadataKeys:
                type: array
                description: "Add up to 6 metadata keys for filtering.  These 2 are always included: document_id, confidence."
                listLabel: "Filterable metadata keys"
                itemLabel: "Metadata key"
                maxItems: 6
                items:
                  type: string
          pricing:
            order: 9
            type: object
            sectionLabel: S3 Vectors
            properties:
              filterableMetadataKeys:
                type: array
                description: "Add up to 6 metadata keys for filtering.  These 4 are always included: document_id, document_type, section_type, confidence."
                listLabel: "Filterable metadata keys"
                itemLabel: "Metadata key"
                maxItems: 6
                items:
                  type: string
          pricing:
            order: 9
            type: array
            sectionLabel: Pricing (Estimates only - check https://aws.amazon.com/bedrock/pricing/ & https://aws.amazon.com/textract/pricing/)
            listLabel: Services
            itemLabel: Service/API
            columns: 2
            items:
              type: object
              required:
                - name
                - units
              properties:
                name:
                  type: string
                  description: Service/API
                units:
                  type: array
                  listLabel: Metered unit pricing
                  itemLabel: Metered Unit price
                  items:
                    type: object
                    required:
                      - name
                      - price
                    properties:
                      name:
                        type: string
                        description: Metered unit name
                      price:
                        type: number
                        description: Estimated cost/unit
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  UpdateDefaultConfig:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !Ref UpdateConfigurationFunctionArn
      Default: !Ref ConfigurationDefaultS3Uri
      ConfigLibraryHash: !Ref ConfigLibraryHash
      CustomClassificationModelARN: !Ref CustomClassificationModelARN
      CustomExtractionModelARN: !Ref CustomExtractionModelARN

  OCRFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: "This Lambda function does not require VPC access as it only interacts with AWS services via AWS APIs"
          - id: W92
            reason: "Function does not require concurrent execution limits as it is designed to scale based on demand"
          - id: W11
            reason: "Textract DetectDocumentText API and Cloudwatch APIs do not support resource-level permissions"
    # checkov:skip=CKV_AWS_116: "DLQ not required for this function as StepFunctions will handle retries"
    # checkov:skip=CKV_AWS_173: "Environment variables do not contain sensitive data - only configuration values like feature flags and non-sensitive settings"
    # checkov:skip=CKV_AWS_117: "Function does not require VPC access as it only interacts with AWS services via APIs"
    # checkov:skip=CKV_AWS_115: "Function does not require reserved concurrency as it scales based on demand"
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      CodeUri: src/ocr_function/
      Handler: index.handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 4096
      Environment:
        Variables:
          METRIC_NAMESPACE: !Ref StackName
          MAX_WORKERS: 20
          CONFIGURATION_TABLE_NAME: !Ref ConfigurationTable
          LOG_LEVEL: !Ref LogLevel
          APPSYNC_API_URL: !Ref AppSyncApiUrl
          TRACKING_TABLE: !Ref TrackingTable
          DOCUMENT_TRACKING_MODE: !If [HasAppSyncApi, 'appsync', 'dynamodb']
          WORKING_BUCKET: !Ref WorkingBucket
      LoggingConfig:
        LogGroup: !Ref OCRFunctionLogGroup
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3CrudPolicy:
            BucketName: !Ref OutputBucket
        - S3CrudPolicy:
            BucketName: !Ref WorkingBucket
        - S3ReadPolicy:
            BucketName: !Ref InputBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref ConfigurationTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TrackingTable
        - Statement:
          - Effect: Allow
            Action: cloudwatch:PutMetricData
            Resource: '*'
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: !Ref CustomerManagedEncryptionKeyArn
          # Textract APIs require '*' as they don't support resource-level permissions
          - Effect: Allow
            Action: 
              - textract:DetectDocumentText
              - textract:AnalyzeDocument
            Resource: '*'
          # Bedrock permissions for OCR
          - Effect: Allow
            Action: bedrock:InvokeModel
            Resource: 
                - !Sub "arn:${AWS::Partition}:bedrock:*::foundation-model/*"
                - !Sub "arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/*"
          # AppSync permissions for updating document status (only if AppSync API is available)
          - !If
            - HasAppSyncApi
            - Effect: Allow
              Action:
                - appsync:GraphQL
              Resource: 
                - !Sub "${AppSyncApiArn}/types/Mutation/*"
            - !Ref AWS::NoValue

  
  OCRFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/${AWS::StackName}/lambda/OCRFunction"
      RetentionInDays: !Ref LogRetentionDays

  ClassificationFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "Cloudwatch does not support resource-level permissions"
          - id: W89
            reason: "This Lambda function does not require VPC access as it only interacts with AWS services via AWS APIs"
          - id: W92
            reason: "Function does not require concurrent execution limits as it is designed to scale based on demand"
    # checkov:skip=CKV_AWS_116: "DLQ not required for this function as StepFunctions will handle retries"
    # checkov:skip=CKV_AWS_173: "Environment variables do not contain sensitive data - only configuration values like feature flags and non-sensitive settings"
    # checkov:skip=CKV_AWS_117: "Function does not require VPC access as it only interacts with AWS services via APIs"
    # checkov:skip=CKV_AWS_115: "Function does not require reserved concurrency as it scales based on demand"
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      CodeUri: src/classification_function/
      Handler: index.handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 4096
      Environment:
        Variables:
          METRIC_NAMESPACE: !Ref StackName
          MAX_WORKERS: 20
          TRACKING_TABLE: !Ref TrackingTable
          CONFIGURATION_BUCKET: !Ref ConfigurationBucket
          CONFIGURATION_TABLE_NAME: !Ref ConfigurationTable
          LOG_LEVEL: !Ref LogLevel
          APPSYNC_API_URL: !Ref AppSyncApiUrl
          DOCUMENT_TRACKING_MODE: !If [HasAppSyncApi, 'appsync', 'dynamodb']
          WORKING_BUCKET: !Ref WorkingBucket
          # Guardrails break classification
          # GUARDRAIL_ID_AND_VERSION: !If [HasGuardrailConfig, !Sub "${BedrockGuardrailId}:${BedrockGuardrailVersion}", ""]
      LoggingConfig:
        LogGroup: !Ref ClassificationFunctionLogGroup
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3CrudPolicy:
            BucketName: !Ref OutputBucket
        - S3CrudPolicy:
            BucketName: !Ref WorkingBucket
        - S3ReadPolicy:
            BucketName: !Ref InputBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref TrackingTable
        - S3ReadPolicy:
            BucketName: !Ref ConfigurationBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref ConfigurationTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TrackingTable
        - Statement:
          - Effect: Allow
            Action: cloudwatch:PutMetricData
            Resource: '*'
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: !Ref CustomerManagedEncryptionKeyArn
          # AppSync permissions for updating document status (only if AppSync API is available)
          - !If
            - HasAppSyncApi
            - Effect: Allow
              Action:
                - appsync:GraphQL
              Resource: 
                - !Sub "${AppSyncApiArn}/types/Mutation/*"
            - !Ref AWS::NoValue
          - Effect: Allow
            Action: bedrock:InvokeModel
            Resource: 
                - !Sub "arn:${AWS::Partition}:bedrock:*::foundation-model/*"
                - !Sub "arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/*"
                - !If 
                  - HasCustomClassificationModelARN
                  - !Ref CustomClassificationModelARN
                  - !Ref AWS::NoValue
          - !If
            - HasGuardrailConfig
            - Effect: Allow
              Action: bedrock:ApplyGuardrail
              Resource: !Sub "arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:guardrail/${BedrockGuardrailId}"
            - !Ref AWS::NoValue
  
  ClassificationFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/${AWS::StackName}/lambda/ClassificationFunction"
      RetentionInDays: !Ref LogRetentionDays
  
  ExtractionFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: "This Lambda function does not require VPC access as it only interacts with AWS services via AWS APIs"
          - id: W92
            reason: "Function does not require concurrent execution limits as it is designed to scale based on demand"
          - id: W11
            reason: "Cloudwatch does not support resource-level permissions, and Bedrock should support any enabled Bedrock model_id or inference profile"
          - id: W76
            reason: "Suppressing W76: SPCM for IAM policy document is higher than 25"
    # checkov:skip=CKV_AWS_116: "DLQ not required for this function as StepFunctions will handle retries"
    # checkov:skip=CKV_AWS_173: "Environment variables do not contain sensitive data - only configuration values like feature flags and non-sensitive settings"
    # checkov:skip=CKV_AWS_117: "Function does not require VPC access as it only interacts with AWS services via APIs"
    # checkov:skip=CKV_AWS_115: "Function does not require reserved concurrency as it scales based on demand"
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      CodeUri: src/extraction_function/
      Handler: index.handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 512
      Environment:
        Variables:
          METRIC_NAMESPACE: !Ref StackName
          CONFIGURATION_BUCKET: !Ref ConfigurationBucket
          CONFIGURATION_TABLE_NAME: !Ref ConfigurationTable
          GUARDRAIL_ID_AND_VERSION: !If [HasGuardrailConfig, !Sub "${BedrockGuardrailId}:${BedrockGuardrailVersion}", ""]
          LOG_LEVEL: !Ref LogLevel
          APPSYNC_API_URL: !Ref AppSyncApiUrl
          TRACKING_TABLE: !Ref TrackingTable
          DOCUMENT_TRACKING_MODE: !If [HasAppSyncApi, 'appsync', 'dynamodb']
          WORKING_BUCKET: !Ref WorkingBucket
      LoggingConfig:
        LogGroup: !Ref ExtractionFunctionLogGroup
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3CrudPolicy:
            BucketName: !Ref OutputBucket
        - S3CrudPolicy:
            BucketName: !Ref WorkingBucket
        - S3ReadPolicy:
            BucketName: !Ref InputBucket
        - S3ReadPolicy:
            BucketName: !Ref ConfigurationBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref ConfigurationTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TrackingTable
        - Statement:
          - Effect: Allow
            Action: cloudwatch:PutMetricData
            Resource: '*'
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: !Ref CustomerManagedEncryptionKeyArn
          # AppSync permissions for updating document status (only if AppSync API is available)
          - !If
            - HasAppSyncApi
            - Effect: Allow
              Action:
                - appsync:GraphQL
              Resource: 
                - !Sub "${AppSyncApiArn}/types/Mutation/*"
            - !Ref AWS::NoValue
          - Effect: Allow
            Action: bedrock:InvokeModel
            Resource: 
                - !Sub "arn:${AWS::Partition}:bedrock:*::foundation-model/*"
                - !Sub "arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/*"
                - !If 
                  - HasCustomExtractionModelARN
                  - !Ref CustomExtractionModelARN
                  - !Ref AWS::NoValue
          - Effect: Allow
            Action: lambda:InvokeFunction
            Resource: 
              - !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:GENAIIDP-*"
            Condition:
              StringLike:
                "lambda:FunctionName": "GENAIIDP-*"
          - !If
            - HasGuardrailConfig
            - Effect: Allow
              Action: bedrock:ApplyGuardrail
              Resource: !Sub "arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:guardrail/${BedrockGuardrailId}"
            - !Ref AWS::NoValue

  ExtractionFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/${AWS::StackName}/lambda/ExtractionFunction"
      RetentionInDays: !Ref LogRetentionDays

  AssessmentFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: "This Lambda function does not require VPC access as it only interacts with AWS services via AWS APIs"
          - id: W92
            reason: "Function does not require concurrent execution limits as it is designed to scale based on demand"
          - id: W11
            reason: "Cloudwatch does not support resource-level permissions, and Bedrock should support any enabled Bedrock model_id or inference profile"
    # checkov:skip=CKV_AWS_116: "DLQ not required for this function as StepFunctions will handle retries"
    # checkov:skip=CKV_AWS_173: "Environment variables do not contain sensitive data - only configuration values like feature flags and non-sensitive settings"
    # checkov:skip=CKV_AWS_117: "Function does not require VPC access as it only interacts with AWS services via APIs"
    # checkov:skip=CKV_AWS_115: "Function does not require reserved concurrency as it scales based on demand"
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      CodeUri: src/assessment_function/
      Handler: index.handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 512
      Environment:
        Variables:
          METRIC_NAMESPACE: !Ref StackName
          CONFIGURATION_BUCKET: !Ref ConfigurationBucket
          CONFIGURATION_TABLE_NAME: !Ref ConfigurationTable
          LOG_LEVEL: !Ref LogLevel
          APPSYNC_API_URL: !Ref AppSyncApiUrl
          TRACKING_TABLE: !Ref TrackingTable
          DOCUMENT_TRACKING_MODE: !If [HasAppSyncApi, 'appsync', 'dynamodb']
          WORKING_BUCKET: !Ref WorkingBucket
      LoggingConfig:
        LogGroup: !Ref AssessmentFunctionLogGroup
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3CrudPolicy:
            BucketName: !Ref OutputBucket
        - S3CrudPolicy:
            BucketName: !Ref WorkingBucket
        - S3ReadPolicy:
            BucketName: !Ref InputBucket
        - S3ReadPolicy:
            BucketName: !Ref ConfigurationBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref ConfigurationTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TrackingTable
        - Statement:
          - Effect: Allow
            Action: cloudwatch:PutMetricData
            Resource: '*'
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: !Ref CustomerManagedEncryptionKeyArn
          # AppSync permissions for updating document status (only if AppSync API is available)
          - !If
            - HasAppSyncApi
            - Effect: Allow
              Action:
                - appsync:GraphQL
              Resource: 
                - !Sub "${AppSyncApiArn}/types/Mutation/*"
            - !Ref AWS::NoValue
          - Effect: Allow
            Action: bedrock:InvokeModel
            Resource: 
                - !Sub "arn:${AWS::Partition}:bedrock:*::foundation-model/*"
                - !Sub "arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/*"
          - !If
            - HasGuardrailConfig
            - Effect: Allow
              Action: bedrock:ApplyGuardrail
              Resource: !Sub "arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:guardrail/${BedrockGuardrailId}"
            - !Ref AWS::NoValue

  AssessmentFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/${AWS::StackName}/lambda/AssessmentFunction"
      RetentionInDays: !Ref LogRetentionDays

  ProcessResultsFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "Cloudwatch does not support resource-level permissions"
          - id: W89
            reason: "This Lambda function does not require VPC access as it only interacts with AWS services via AWS APIs"
          - id: W92
            reason: "Function does not require concurrent execution limits as it is designed to scale based on demand"
    # checkov:skip=CKV_AWS_116: "DLQ not required for this function as StepFunctions will handle retries"
    # checkov:skip=CKV_AWS_173: "Environment variables do not contain sensitive data - only configuration values like feature flags and non-sensitive settings"
    # checkov:skip=CKV_AWS_117: "Function does not require VPC access as it only interacts with AWS services via APIs"
    # checkov:skip=CKV_AWS_115: "Function does not require reserved concurrency as it scales based on demand"
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      CodeUri: src/processresults_function/
      Handler: index.handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 4096
      Environment:
        Variables:
          METRIC_NAMESPACE: !Ref StackName
          LOG_LEVEL: !Ref LogLevel
          APPSYNC_API_URL: !Ref AppSyncApiUrl
          TRACKING_TABLE: !Ref TrackingTable
          DOCUMENT_TRACKING_MODE: !If [HasAppSyncApi, 'appsync', 'dynamodb']
          WORKING_BUCKET: !Ref WorkingBucket
          OUTPUT_BUCKET: !Ref OutputBucket
          ENABLE_HITL: !Ref EnableHITL
          SAGEMAKER_A2I_REVIEW_PORTAL_URL: !Ref SageMakerA2IReviewPortalURL
          CONFIGURATION_TABLE_NAME: !Ref ConfigurationTable
      LoggingConfig:
        LogGroup: !Ref ProcessResultsFunctionLogGroup
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3ReadPolicy:
            BucketName: !Ref InputBucket
        - S3CrudPolicy:
            BucketName: !Ref OutputBucket
        - S3CrudPolicy:
            BucketName: !Ref WorkingBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref TrackingTable
        - DynamoDBCrudPolicy:
            TableName: !Ref ConfigurationTable
        - Statement:
            - Effect: Allow
              Action: cloudwatch:PutMetricData
              Resource: "*"
            - Effect: Allow
              Action:
                - kms:Encrypt
                - kms:Decrypt
                - kms:ReEncrypt*
                - kms:GenerateDataKey*
                - kms:DescribeKey
              Resource: !Ref CustomerManagedEncryptionKeyArn
            # AppSync permissions for updating document status (only if AppSync API is available)
            - !If
              - HasAppSyncApi
              - Effect: Allow
                Action:
                  - appsync:GraphQL
                Resource:
                  - !Sub "${AppSyncApiArn}/types/Mutation/*"
              - !Ref AWS::NoValue
            # SSM permissions for A2I FlowDefinition ARN
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${StackName}/FlowDefinitionArn"
            # SageMaker A2I permissions for starting human loops
            - Effect: Allow
              Action:
                - sagemaker-a2i-runtime:StartHumanLoop
                - sagemaker-a2i-runtime:DescribeHumanLoop
                - sagemaker-a2i-runtime:StopHumanLoop
              Resource: "*"
            - Effect: Allow
              Action:
                - sagemaker:StartHumanLoop
              Resource: !Sub "arn:${AWS::Partition}:sagemaker:*:*:flow-definition/*"

  ProcessResultsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/${AWS::StackName}/lambda/ProcessResultsFunction"
      RetentionInDays: !Ref LogRetentionDays

  HITLWaitFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "IAM policy allows broad permissions for DynamoDB operations which are necessary for tracking HITL tokens across multiple tables"
    # checkov:skip=CKV_AWS_173: "Environment variables do not contain sensitive data - only configuration values like feature flags and non-sensitive settings"
    # checkov:skip=CKV_AWS_117: "Function does not require VPC access as it only interacts with AWS services via APIs"
    # checkov:skip=CKV_AWS_115: "Function does not require reserved concurrency as it scales based on demand"
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      CodeUri: src/hitl-wait-function/
      Handler: index.lambda_handler
      Runtime: python3.12
      Timeout: 300
      MemorySize: 512
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
          TRACKING_TABLE: !Ref TrackingTable
          WORKING_BUCKET: !Ref WorkingBucket
          SAGEMAKER_A2I_REVIEW_PORTAL_URL: !Ref SageMakerA2IReviewPortalURL
      LoggingConfig:
        LogGroup: !Ref HITLWaitFunctionLogGroup
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref TrackingTable
        - S3CrudPolicy:
            BucketName: !Ref WorkingBucket
        - Statement:
          - Effect: Allow
            Action: cloudwatch:PutMetricData
            Resource: '*'
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: !Ref CustomerManagedEncryptionKeyArn
          # AppSync permissions for updating document status (only if AppSync API is available)
          - !If
            - HasAppSyncApi
            - Effect: Allow
              Action:
                - appsync:GraphQL
              Resource:
                - !Sub "${AppSyncApiArn}/types/Mutation/*"
            - !Ref AWS::NoValue

  HITLWaitFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/${AWS::StackName}/lambda/HITLWaitFunction"
      RetentionInDays: !Ref LogRetentionDays

  HITLStatusUpdateFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: "Function does not require VPC access as it only interacts with AWS services via APIs"
          - id: W92
            reason: "Function does not require reserved concurrency as it scales based on demand"
    # checkov:skip=CKV_AWS_117: "Function does not require VPC access as it only interacts with AWS services via APIs"
    # checkov:skip=CKV_AWS_115: "Function does not require reserved concurrency as it scales based on demand"
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      CodeUri: src/hitl-status-update-function/
      Handler: index.handler
      Runtime: python3.12
      Timeout: 60
      LoggingConfig:
        LogGroup: !Ref HITLStatusUpdateFunctionLogGroup
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3CrudPolicy:
            BucketName: !Ref WorkingBucket
        - Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource: !Ref CustomerManagedEncryptionKeyArn

  HITLStatusUpdateFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/${AWS::StackName}/lambda/HITLStatusUpdateFunction"
      RetentionInDays: !Ref LogRetentionDays

  #EventBridge Rule to check Human In the Loop Status change
  HITLEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: 'Rule for SageMaker A2I HumanLoop Status Change'
      EventPattern:
        detail-type:
          - 'SageMaker A2I HumanLoop Status Change'
        source:
          - 'aws.sagemaker'
        detail:
          humanLoopStatus:
            - 'Completed'
            - 'Failed'
            - 'Stopped'
      State: 'ENABLED'
      Targets:
        - Arn: !GetAtt HITLProcessLambdaFunction.Arn
          Id: 'HITLProcessLambdaTarget'

  HITLProcessLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/${AWS::StackName}/lambda/HITLProcessLambdaFunction"
      RetentionInDays: !Ref LogRetentionDays

  HITLProcessLambdaFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: "Function does not require VPC access as it only interacts with AWS services via APIs"
          - id: W92
            reason: "Function does not require reserved concurrency as it scales based on demand"
          - id: W58
            reason: "DLQ not required for EventBridge triggered function as it handles A2I status updates"
    # checkov:skip=CKV_AWS_116: "DLQ not required for EventBridge triggered function as it handles A2I status updates"
    # checkov:skip=CKV_AWS_117: "Function does not require VPC access as it only interacts with AWS services via APIs"
    # checkov:skip=CKV_AWS_115: "Function does not require reserved concurrency as it scales based on demand"
    # checkov:skip=CKV_AWS_173: "Environment variables do not contain sensitive data - only configuration values like feature flags and non-sensitive settings"
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      Handler: index.lambda_handler
      LoggingConfig:
        LogGroup: !Ref HITLProcessLambdaLogGroup
      Runtime: python3.12
      Timeout: 300
      CodeUri: src/hitl-process-function/
      Role: !GetAtt HITLProcessLambdaRole.Arn
      Environment:
        Variables:
          TRACKING_TABLE: !Ref TrackingTable

  HITLProcessLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub "lambda.${AWS::URLSuffix}"
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: S3AccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${OutputBucket}/*"
                  - !Sub "arn:${AWS::Partition}:s3:::sagemaker-*/*"
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${OutputBucket}"
                  - !Sub "arn:${AWS::Partition}:s3:::sagemaker-*"
        - PolicyName: KMSAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey
                Resource: !Ref CustomerManagedEncryptionKeyArn
        - PolicyName: DynamoDBAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource: !Sub "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TrackingTable}"
        - PolicyName: StepFunctionsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - states:SendTaskSuccess
                  - states:SendTaskFailure
                Resource: "*"

  #Event Bridge permissions to invoke Lambda function during HITL change 
  EventBridgeInvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref HITLProcessLambdaFunction
      Action: 'lambda:InvokeFunction'
      Principal: !Sub "events.${AWS::URLSuffix}"
      SourceArn: !GetAtt HITLEventRule.Arn

  SummarizationFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "Cloudwatch does not support resource-level permissions"
          - id: W89
            reason: "This Lambda function does not require VPC access as it only interacts with AWS services via AWS APIs"
          - id: W92
            reason: "Function does not require concurrent execution limits as it is designed to scale based on demand"
    # checkov:skip=CKV_AWS_116: "DLQ not required for this function as StepFunctions will handle retries"
    # checkov:skip=CKV_AWS_173: "Environment variables do not contain sensitive data - only configuration values like feature flags and non-sensitive settings"    
    # checkov:skip=CKV_AWS_117: "Function does not require VPC access as it only interacts with AWS services via APIs"
    # checkov:skip=CKV_AWS_115: "Function does not require reserved concurrency as it scales based on demand"
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      CodeUri: src/summarization_function/
      Handler: index.handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 4096
      Environment:
        Variables:
          METRIC_NAMESPACE: !Ref StackName
          CONFIGURATION_TABLE_NAME: !Ref ConfigurationTable
          GUARDRAIL_ID_AND_VERSION: !If [HasGuardrailConfig, !Sub "${BedrockGuardrailId}:${BedrockGuardrailVersion}", ""]
          LOG_LEVEL: !Ref LogLevel
          APPSYNC_API_URL: !Ref AppSyncApiUrl
          TRACKING_TABLE: !Ref TrackingTable
          DOCUMENT_TRACKING_MODE: !If [HasAppSyncApi, 'appsync', 'dynamodb']
          WORKING_BUCKET: !Ref WorkingBucket
      LoggingConfig:
        LogGroup: !Ref SummarizationFunctionLogGroup
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3ReadPolicy:
            BucketName: !Ref InputBucket
        - S3CrudPolicy:
            BucketName: !Ref OutputBucket
        - S3CrudPolicy:
            BucketName: !Ref WorkingBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref ConfigurationTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TrackingTable
        - Statement:
          - Effect: Allow
            Action: cloudwatch:PutMetricData
            Resource: '*'
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: !Ref CustomerManagedEncryptionKeyArn
          # AppSync permissions for updating document status (only if AppSync API is available)
          - !If
            - HasAppSyncApi
            - Effect: Allow
              Action:
                - appsync:GraphQL
              Resource: 
                - !Sub "${AppSyncApiArn}/types/Mutation/*"
            - !Ref AWS::NoValue
          - Effect: Allow
            Action: bedrock:InvokeModel
            Resource: 
                - !Sub "arn:${AWS::Partition}:bedrock:*::foundation-model/*"
                - !Sub "arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/*"
          - !If
            - HasGuardrailConfig
            - Effect: Allow
              Action: bedrock:ApplyGuardrail
              Resource: !Sub "arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:guardrail/${BedrockGuardrailId}"
            - !Ref AWS::NoValue

  SummarizationFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/${AWS::StackName}/lambda/SummarizationFunction"
      RetentionInDays: !Ref LogRetentionDays

  DocumentProcessingStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      Name: !Sub "${AWS::StackName}-DocumentProcessingWorkflow"
      DefinitionUri: statemachine/workflow.asl.json
      DefinitionSubstitutions:
        OCRFunctionArn: !GetAtt OCRFunction.Arn
        ClassificationFunctionArn: !GetAtt ClassificationFunction.Arn
        ExtractionFunctionArn: !GetAtt ExtractionFunction.Arn
        AssessmentFunctionArn: !GetAtt AssessmentFunction.Arn
        ProcessResultsLambdaArn: !GetAtt ProcessResultsFunction.Arn
        HITLWaitFunctionArn: !GetAtt HITLWaitFunction.Arn
        HITLStatusUpdateFunctionArn: !GetAtt HITLStatusUpdateFunction.Arn
        SummarizationLambdaArn: !GetAtt SummarizationFunction.Arn
        OutputBucket: !Ref OutputBucket
      Logging:
        Level: ALL
        IncludeExecutionData: true
        Destinations:
          - CloudWatchLogsLogGroup: !GetAtt StateMachineLogGroup.Arn
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref OCRFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ClassificationFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ExtractionFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref AssessmentFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessResultsFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HITLWaitFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HITLStatusUpdateFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref SummarizationFunction
        - CloudWatchLogsFullAccess

  StateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/aws/vendedlogs/states/${AWS::StackName}/workflow"  # required prefix
      RetentionInDays: !Ref LogRetentionDays

  Dashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub "${AWS::StackName}-${AWS::Region}-Pattern2-Subset"
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [{"expression": "m1/PERIOD(m1)*60", "label": "Documents per Minute"}],
                  ["${StackName}", "InputDocuments", {"id": "m1", "stat": "Sum", "visible": false}]
                ],
                "region": "${AWS::Region}",
                "title": "Input Documents (per Minute)",
                "view": "timeSeries",
                "period": 60,
                "yAxis": {
                  "left": {
                    "label": "Count per Minute"
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 8,
              "y": 0,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [{"expression": "m1/PERIOD(m1)*60", "label": "Pages per Minute"}],
                  ["${StackName}", "InputDocumentPages", {"id": "m1", "stat": "Sum", "visible": false}]
                ],
                "region": "${AWS::Region}",
                "title": "Input Document Pages (per Minute)",
                "view": "timeSeries",
                "period": 60,
                "yAxis": {
                  "left": {
                    "label": "Count per Minute"
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 16,
              "y": 0,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [],
                "region": "${AWS::Region}",
                "title": "Blank",
                "view": "timeSeries",
                "period": 60,
                "yAxis": {
                  "left": {
                    "label": "N/A"
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 6,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [{"expression": "m1/PERIOD(m1)*60", "label": "Tokens per Minute (TPM)"}],
                  [{"expression": "m2/PERIOD(m1)*60", "label": "Cache Read TPM"}],
                  [{"expression": "m3/PERIOD(m1)*60", "label": "Cache Write TPM"}],
                  ["${StackName}", "InputTokens", {"id": "m1", "stat": "Sum", "visible": false}],
                  [".", "CacheReadInputTokens", {"id": "m2", "stat": "Sum", "visible": false}],
                  [".", "CacheWriteInputTokens", {"id": "m3", "stat": "Sum", "visible": false}]
                ],
                "region": "${AWS::Region}",
                "title": "Input Tokens (per Minute)",
                "view": "timeSeries",
                "period": 60,
                "yAxis": {
                  "left": {
                    "label": "Count per Minute"
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 8,
              "y": 6,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [{"expression": "m1/PERIOD(m1)*60", "label": "Tokens per Minute (TPM)"}],
                  ["${StackName}", "OutputTokens", {"id": "m1", "stat": "Sum", "visible": false}]
                ],
                "region": "${AWS::Region}",
                "title": "Output Tokens (per Minute)",
                "view": "timeSeries",
                "period": 60,
                "yAxis": {
                  "left": {
                    "label": "Count per Minute"
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 16,
              "y": 6,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [{"expression": "m1/PERIOD(m1)*60", "label": "Tokens per Minute"}],
                  ["${StackName}", "TotalTokens", {"id": "m1", "stat": "Sum", "visible": false}]
                ],
                "region": "${AWS::Region}",
                "title": "Total Tokens (per Minute)",
                "view": "timeSeries",
                "period": 60,
                "yAxis": {
                  "left": {
                    "label": "Count per Minute"
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 12,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [{"expression": "m1/PERIOD(m1)*60", "label": "Total per Minute"}],
                  [{"expression": "m2/PERIOD(m2)*60", "label": "Succeeded per Minute"}],
                  [{"expression": "m3/PERIOD(m3)*60", "label": "Failed per Minute"}],
                  ["${StackName}", "BedrockRequestsTotal", {"id": "m1", "stat": "Sum", "visible": false}],
                  [".", "BedrockRequestsSucceeded", {"id": "m2", "stat": "Sum", "visible": false}],
                  [".", "BedrockRequestsFailed", {"id": "m3", "stat": "Sum", "visible": false}]
                ],
                "region": "${AWS::Region}",
                "title": "Bedrock Request Status (per Minute)",
                "view": "timeSeries",
                "period": 60,
                "yAxis": {
                  "left": {
                    "label": "Count per Minute"
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 8,
              "y": 12,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [{"expression": "m1/PERIOD(m1)*60", "label": "Throttles per Minute"}],
                  [{"expression": "m2/PERIOD(m2)*60", "label": "Retry Success per Minute"}],
                  [{"expression": "m3/PERIOD(m3)*60", "label": "Max Retries Exceeded per Minute"}],
                  ["${StackName}", "BedrockThrottles", {"id": "m1", "stat": "Sum", "visible": false}],
                  [".", "BedrockRetrySuccess", {"id": "m2", "stat": "Sum", "visible": false}],
                  [".", "BedrockMaxRetriesExceeded", {"id": "m3", "stat": "Sum", "visible": false}]
                ],
                "region": "${AWS::Region}",
                "title": "Bedrock Retries (per Minute)",
                "view": "timeSeries",
                "period": 60,
                "yAxis": {
                  "left": {
                    "label": "Count per Minute"
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 16,
              "y": 12,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  ["${StackName}", "BedrockRequestLatency", {"stat": "Average"}],
                  [".", "BedrockRequestLatency", {"stat": "p90"}],
                  [".", "BedrockRequestLatency", {"stat": "Maximum"}],
                  [".", "BedrockTotalLatency", {"stat": "Average"}],
                  [".", "BedrockTotalLatency", {"stat": "p90"}],
                  [".", "BedrockTotalLatency", {"stat": "Maximum"}]
                ],
                "region": "${AWS::Region}",
                "title": "Bedrock Latency - per request, and total (including backoff/retries)",
                "period": 300,
                "view": "timeSeries",
                "stacked": false,
                "annotations": {
                  "horizontal": [{
                    "value": ${ExecutionTimeThresholdMs},
                    "label": "Threshold (${ExecutionTimeThresholdMs}ms)",
                    "color": "#ff0000"
                  }]
                }
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 18,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/Lambda", "Duration", "FunctionName", "${OCRFunction}"]
                ],
                "region": "${AWS::Region}",
                "title": "OCR Function Duration",
                "period": 300,
                "annotations": {
                  "horizontal": [{
                    "value": ${ExecutionTimeThresholdMs},
                    "label": "Threshold (${ExecutionTimeThresholdMs}ms)",
                    "color": "#ff0000"
                  }]
                },
                "stat": "Average",
                "view": "timeSeries"
              }
            },
            {
              "type": "metric",
              "x": 8,
              "y": 18,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/Lambda", "Duration", "FunctionName", "${ClassificationFunction}"]
                ],
                "region": "${AWS::Region}",
                "title": "Classification Function Duration",
                "period": 300,
                "annotations": {
                  "horizontal": [{
                    "value": ${ExecutionTimeThresholdMs},
                    "label": "Threshold (${ExecutionTimeThresholdMs}ms)",
                    "color": "#ff0000"
                  }]
                },
                "stat": "Average",
                "view": "timeSeries"
              }
            },
            {
              "type": "metric",
              "x": 16,
              "y": 18,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/Lambda", "Duration", "FunctionName", "${ExtractionFunction}"]
                ],
                "region": "${AWS::Region}",
                "title": "Extraction Function Duration",
                "period": 300,
                "annotations": {
                  "horizontal": [{
                    "value": ${ExecutionTimeThresholdMs},
                    "label": "Threshold (${ExecutionTimeThresholdMs}ms)",
                    "color": "#ff0000"
                  }]
                },
                "stat": "Average",
                "view": "timeSeries"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 24,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/Lambda", "Duration", "FunctionName", "${AssessmentFunction}"]
                ],
                "region": "${AWS::Region}",
                "title": "Assessment Function Duration",
                "period": 300,
                "annotations": {
                  "horizontal": [{
                    "value": ${ExecutionTimeThresholdMs},
                    "label": "Threshold (${ExecutionTimeThresholdMs}ms)",
                    "color": "#ff0000"
                  }]
                },
                "stat": "Average",
                "view": "timeSeries"
              }
            },
            {
              "type": "metric",
              "x": 8,
              "y": 24,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/Lambda", "Duration", "FunctionName", "${SummarizationFunction}"]
                ],
                "region": "${AWS::Region}",
                "title": "Summarization Function Duration",
                "period": 300,
                "annotations": {
                  "horizontal": [{
                    "value": ${ExecutionTimeThresholdMs},
                    "label": "Threshold (${ExecutionTimeThresholdMs}ms)",
                    "color": "#ff0000"
                  }]
                },
                "stat": "Average",
                "view": "timeSeries"
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 24,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '${OCRFunctionLogGroup}' | filter @type = \"REPORT\" | fields @timestamp, @logStream, @billedDuration, @maxMemoryUsed/1024/1024 as memoryUsedMB | filter @billedDuration > ${ExecutionTimeThresholdMs} | sort by @billedDuration desc | limit 20",
                "region": "${AWS::Region}",
                "title": "OCR Lambda Long Running Invocations",
                "view": "table"
              }
            },
            {
              "type": "log",
              "x": 12,
              "y": 24,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '${OCRFunctionLogGroup}' | fields @timestamp, @logStream, @message | filter @message like /ERROR/ or @message like /Task timed out/ | parse @message /RequestId: (?<requestId>[^ ]*)/ | sort @timestamp desc | limit 20",
                "region": "${AWS::Region}",
                "title": "OCR Lambda Errors",
                "view": "table"
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 30,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '${ClassificationFunctionLogGroup}' | filter @type = \"REPORT\" | fields @timestamp, @logStream, @billedDuration, @maxMemoryUsed/1024/1024 as memoryUsedMB | filter @billedDuration > ${ExecutionTimeThresholdMs} | sort by @billedDuration desc | limit 20",
                "region": "${AWS::Region}",
                "title": "Classification Lambda Long Running Invocations",
                "view": "table"
              }
            },
            {
              "type": "log",
              "x": 12,
              "y": 30,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '${ClassificationFunctionLogGroup}' | fields @timestamp, @logStream, @message | filter @message like /ERROR/ or @message like /Task timed out/ | parse @message /RequestId: (?<requestId>[^ ]*)/ | sort @timestamp desc | limit 20",
                "region": "${AWS::Region}",
                "title": "Classification Lambda Errors",
                "view": "table"
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 36,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '${ExtractionFunctionLogGroup}' | filter @type = \"REPORT\" | fields @timestamp, @logStream, @billedDuration, @maxMemoryUsed/1024/1024 as memoryUsedMB | filter @billedDuration > ${ExecutionTimeThresholdMs} | sort by @billedDuration desc | limit 20",
                "region": "${AWS::Region}",
                "title": "Extraction Lambda Long Running Invocations",
                "view": "table"
              }
            },
            {
              "type": "log",
              "x": 12,
              "y": 36,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '${ExtractionFunctionLogGroup}' | fields @timestamp, @logStream, @message | filter @message like /ERROR/ or @message like /Task timed out/ | parse @message /RequestId: (?<requestId>[^ ]*)/ | sort @timestamp desc | limit 20",
                "region": "${AWS::Region}",
                "title": "Extraction Lambda Errors",
                "view": "table"
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 42,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '${AssessmentFunctionLogGroup}' | filter @type = \"REPORT\" | fields @timestamp, @logStream, @billedDuration, @maxMemoryUsed/1024/1024 as memoryUsedMB | filter @billedDuration > ${ExecutionTimeThresholdMs} | sort by @billedDuration desc | limit 20",
                "region": "${AWS::Region}",
                "title": "Assessment Lambda Long Running Invocations",
                "view": "table"
              }
            },
            {
              "type": "log",
              "x": 12,
              "y": 42,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '${AssessmentFunctionLogGroup}' | fields @timestamp, @logStream, @message | filter @message like /ERROR/ or @message like /Task timed out/ | parse @message /RequestId: (?<requestId>[^ ]*)/ | sort @timestamp desc | limit 20",
                "region": "${AWS::Region}",
                "title": "Assessment Lambda Errors",
                "view": "table"
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 48,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '${SummarizationFunctionLogGroup}' | filter @type = \"REPORT\" | fields @timestamp, @logStream, @billedDuration, @maxMemoryUsed/1024/1024 as memoryUsedMB | filter @billedDuration > ${ExecutionTimeThresholdMs} | sort by @billedDuration desc | limit 20",
                "region": "${AWS::Region}",
                "title": "Summarization Lambda Long Running Invocations",
                "view": "table"
              }
            },
            {
              "type": "log",
              "x": 12,
              "y": 48,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '${SummarizationFunctionLogGroup}' | fields @timestamp, @logStream, @message | filter @message like /ERROR/ or @message like /Task timed out/ | parse @message /RequestId: (?<requestId>[^ ]*)/ | sort @timestamp desc | limit 20",
                "region": "${AWS::Region}",
                "title": "Summarization Lambda Errors",
                "view": "table"
              }
            }
          ]
        }

Outputs:

  # Outputs required by main template

  StateMachineName:
    Description: Step Functions State machine Name
    Value: !GetAtt DocumentProcessingStateMachine.Name

  StateMachineArn:
    Description: Step Functions State machine ARN
    Value: !GetAtt DocumentProcessingStateMachine.Arn
  
  StateMachineLogGroup:
    Description: Step Functions State machine LogGroup
    Value: !Ref StateMachineLogGroup

  DashboardName:
    Description: Name of the Pattern 1 CloudWatch Dashboard
    Value: !Ref Dashboard

  DashboardArn:
    Description: ARN of the Pattern 1 CloudWatch Dashboard
    Value: !Sub "arn:${AWS::Partition}:cloudwatch::${AWS::AccountId}:dashboard/${Dashboard}"
